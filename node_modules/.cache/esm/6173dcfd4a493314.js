let express,dotenv,morgan,mongoose,routerCategory,routerProduct,userRouter,Auth,cors,Error;_4a4‍.w("express",[["default",["express"],function(v){express=v}]]);_4a4‍.w("dotenv",[["default",["dotenv"],function(v){dotenv=v}]]);_4a4‍.w("morgan",[["default",["morgan"],function(v){morgan=v}]]);_4a4‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_4a4‍.w("./routes/category",[["default",["routerCategory"],function(v){routerCategory=v}]]);_4a4‍.w("./routes/products",[["default",["routerProduct"],function(v){routerProduct=v}]]);_4a4‍.w("./routes/user",[["default",["userRouter"],function(v){userRouter=v}]]);_4a4‍.w("./helpers/jwt",[["default",["Auth"],function(v){Auth=v}]]);_4a4‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_4a4‍.w("./helpers/Error",[["default",["Error"],function(v){Error=v}]]);
 
 
 


 

 


const app = express() ;  

dotenv.config() ; 

const port = process.env.PORT ; 
const api = process.env.API_URl  ;  

// Middleware  
app.use(cors()) 
app.use(Auth()) 
app.use(Error)
app.use(express.json()) 
app.use(express.urlencoded({
    extended:true
})) 
// morgan pour enrigistrer les requetes http pour node js (utilisation d'une chaine de format prédéfinie)
app.use(morgan('tiny')) 

//connection avec ma base de donnée .
mongoose.connect(process.env.CONNECTION_STRING,{
    useNewUrlParser: true,
    useUnifiedTopology: true
}) 
.then(()=> console.log("connection à la base de donnée réussie"))
.catch(()=>console.log("connection à la base donnée échouée "))
// app.get(`${api}/products` ,(req,res)=>{ 
    
//     res.send("hello")
// })  
app.use(`${api}` , routerCategory)
app.use( `${api}`, routerProduct)
app.use( `${api}`, userRouter) 


app.listen(port ,()=>{ 
    console.log(`Le serveur est lancé sur le port ${port}`)
})